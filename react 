import React, { useState } from "react";
import { Card, CardContent, Typography, Button, TextField, Box } from "@mui/material";

const ExpandableJsonCard = ({ data }) => {
  const [expandedKeys, setExpandedKeys] = useState({});
  const [searchTerm, setSearchTerm] = useState("");

  const toggleExpand = (key) => {
    setExpandedKeys((prev) => ({ ...prev, [key]: !prev[key] }));
  };

  const renderTree = (obj, parentKey = "") => {
    return Object.entries(obj).map(([key, value]) => {
      const currentKey = parentKey ? `${parentKey}.${key}` : key;

      return (
        <Box key={currentKey} sx={{ marginLeft: 2 }}>
          <Button
            onClick={() => toggleExpand(currentKey)}
            size="small"
            sx={{ minWidth: "auto", padding: 0 }}
          >
            {typeof value === "object" && value !== null
              ? expandedKeys[currentKey]
                ? "-"
                : "+"
              : ""}
          </Button>
          <Typography
            variant="body2"
            component="span"
            sx={{
              fontWeight: "bold",
              marginRight: 1,
              color: key.includes(searchTerm) ? "blue" : "black",
            }}
          >
            {key}:
          </Typography>
          {typeof value === "object" && value !== null ? (
            expandedKeys[currentKey] ? renderTree(value, currentKey) : null
          ) : (
            <Typography
              variant="body2"
              component="span"
              sx={{
                color: value.toString().includes(searchTerm) ? "blue" : "black",
              }}
            >
              {value.toString()}
            </Typography>
          )}
        </Box>
      );
    });
  };

  return (
    <Card variant="outlined" sx={{ maxWidth: 600, margin: "auto", marginTop: 4 }}>
      <CardContent>
        <Typography variant="h6" sx={{ marginBottom: 2 }}>
          Dynamic JSON Card
        </Typography>
        <TextField
          label="Search"
          variant="outlined"
          fullWidth
          size="small"
          sx={{ marginBottom: 2 }}
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
        />
        <Box sx={{ maxHeight: 400, overflowY: "auto" }}>{renderTree(data)}</Box>
      </CardContent>
    </Card>
  );
};

const App = () => {
  const jsonData = {
    id: 1,
    name: "John Doe",
    address: {
      street: "123 Main St",
      city: "New York",
      zip: 10001,
    },
    hobbies: ["reading", "coding"],
    company: {
      name: "Tech Corp",
      location: {
        country: "USA",
        state: "NY",
      },
    },
  };

  return <ExpandableJsonCard data={jsonData} />;
};

export default App;